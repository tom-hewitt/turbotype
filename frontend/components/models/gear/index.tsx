/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 frontend/components/models/gear/setting.glb --transform --types
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ToonMaterial } from "../../materials/ToonMaterial";

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh;
  };
  materials: {
    ["Color - Red"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "CircleAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Gear(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/setting-transformed.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Circle" geometry={nodes.Circle.geometry}>
          <ToonMaterial color="#b8b8b8" />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/setting-transformed.glb");
