/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 paintbucket.glb --transform --types
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ToonMaterial } from "../../materials/ToonMaterial";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_2: THREE.Mesh;
    ["Cylinder(inside)_2"]: THREE.Mesh;
  };
  materials: {
    Material_1: THREE.MeshStandardMaterial;
    Material_0: THREE.MeshStandardMaterial;
  };
};

export function PaintBucket(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/paintbucket-transformed.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cylinder_2.geometry}
        position={[0, 0.49, 0]}
        rotation={[0, 0.6, 0]}
      >
        <ToonMaterial color="#b8b8b8" />
      </mesh>
      <mesh
        geometry={nodes["Cylinder(inside)_2"].geometry}
        material={materials.Material_0}
        position={[0, -0.09, 0]}
        rotation={[0, 0.68, 0]}
      >
        <ToonMaterial color="#B71F35" />
      </mesh>
    </group>
  );
}

useGLTF.preload("/paintbucket-transformed.glb");
