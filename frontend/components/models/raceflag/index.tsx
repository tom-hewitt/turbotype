/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 raceflag.glb --transform --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    flag1: THREE.Mesh
    flag: THREE.Mesh
  }
  materials: {}
}

export function RaceFlag(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/raceflag-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.flag1.geometry} material={nodes.flag1.material} position={[-0.21, -0.02, 0.27]} rotation={[-3.13, -0.04, 2.87]} scale={[1.24, 1.03, 1]} />
      <mesh geometry={nodes.flag.geometry} material={nodes.flag.material} position={[-0.16, 0.02, 0.16]} rotation={[-0.02, 0.03, -0.43]} scale={[1.24, 1.03, 1]} />
    </group>
  )
}

useGLTF.preload('/raceflag-transformed.glb')
