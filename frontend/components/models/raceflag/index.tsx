/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 frontend/components/models/raceflag/raceflag_new.glb --transform --types
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ToonMaterial } from "../../materials/ToonMaterial";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cylinder: THREE.Mesh;
    Cube001: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

export function RaceFlag(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/raceflag_new-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cube.geometry}
        // material={materials["Material.001"]}
        scale={[0.02, 0.88, 1.19]}
      >
        <ToonMaterial color="#1f1f1f" />
      </mesh>
      <mesh
        geometry={nodes.Cylinder.geometry}
        // material={materials["Material.002"]}
        position={[0, -0.96, 1.26]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[-0.09, -2, -0.09]}
      >
        <ToonMaterial color="#ba7000" />
      </mesh>
      <mesh
        geometry={nodes.Cube001.geometry}
        // material={materials.Material}
        scale={[0.02, 0.88, 1.19]}
      >
        <ToonMaterial color="#ffffff" />
      </mesh>
    </group>
  );
}

useGLTF.preload("/raceflag_new-transformed.glb");
