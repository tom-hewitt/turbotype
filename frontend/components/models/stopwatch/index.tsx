/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 explorer.glb --transform --types
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle003: THREE.Mesh;
    Circle003_1: THREE.Mesh;
    Circle003_2: THREE.Mesh;
    Circle003_3: THREE.Mesh;
    Circle003_4: THREE.Mesh;
    Needles: THREE.Mesh;
  };
  materials: {
    ["Color - Red Body"]: THREE.MeshStandardMaterial;
    ["Color - Red Dot"]: THREE.MeshStandardMaterial;
    ["Color - Inner Yellow"]: THREE.MeshStandardMaterial;
    ["Sliver Metal"]: THREE.MeshStandardMaterial;
    ["Base Transparent"]: THREE.MeshStandardMaterial;
  };
};

export function Stopwatch(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "/explorer-transformed.glb"
  ) as GLTFResult;

  console.log(materials);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Explorer" position={[0, -0.21, 0]}>
          <mesh
            name="Circle003"
            geometry={nodes.Circle003.geometry}
            material={materials["Color - Red Body"]}
          />
          <mesh
            name="Circle003_1"
            geometry={nodes.Circle003_1.geometry}
            material={materials["Color - Red Dot"]}
          />
          <mesh
            name="Circle003_2"
            geometry={nodes.Circle003_2.geometry}
            material={materials["Color - Inner Yellow"]}
          />
          <mesh
            name="Circle003_3"
            geometry={nodes.Circle003_3.geometry}
            material={materials["Sliver Metal"]}
          />
          <mesh
            name="Circle003_4"
            geometry={nodes.Circle003_4.geometry}
            material={materials["Base Transparent"]}
          />
          <mesh
            name="Needles"
            geometry={nodes.Needles.geometry}
            material={materials["Sliver Metal"]}
            position={[0, 0, 0.04]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/explorer-transformed.glb");
