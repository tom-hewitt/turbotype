/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 frontend/components/models/trophy/trophy.glb --transform --types
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ToonMaterial } from "../../materials/ToonMaterial";

type GLTFResult = GLTF & {
  nodes: {
    Cube053: THREE.Mesh;
    Cube053_1: THREE.Mesh;
  };
  materials: {
    ["Silver Metal"]: THREE.MeshStandardMaterial;
    ["Color - Red Base"]: THREE.MeshStandardMaterial;
  };
};

export function Trophy(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/trophy-transformed.glb") as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="Cube016">
          <mesh
            name="Cube053"
            geometry={nodes.Cube053.geometry}
            // material={materials["Silver Metal"]}
          >
            <ToonMaterial color="#bf8221" />
          </mesh>
          <mesh
            name="Cube053_1"
            geometry={nodes.Cube053_1.geometry}
            // material={materials["Color - Red Base"]}
          >
            <ToonMaterial color="black" />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/trophy-transformed.glb");
