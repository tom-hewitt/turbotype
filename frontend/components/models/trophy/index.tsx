/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 trophy.glb --transform --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    body: THREE.Mesh
    bottom: THREE.Mesh
  }
  materials: {
    Material_00: THREE.MeshStandardMaterial
    Material_01: THREE.MeshStandardMaterial
  }
}

export function Trophy(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/trophy-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-0.44, 0.61, 0.14]} rotation={[2.05, 0.71, -2.25]} scale={[1.57, 1, 1]}>
        <mesh geometry={nodes.body.geometry} material={materials.Material_00} rotation={[2.47, 1.3, 0.01]} />
      </group>
      <mesh geometry={nodes.bottom.geometry} material={materials.Material_01} position={[-0.03, -0.34, -0.13]} rotation={[0, 0.53, 0]} />
    </group>
  )
}

useGLTF.preload('/trophy-transformed.glb')
